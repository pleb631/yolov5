# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# if scale in "mlx":
#   args[3] = True
# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
   [[-1, 1, Conv, [64, 3, 2]], # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]], # 1-P2/4
   [-1, 2, C3k2, [256, True, 0.25]],
   [-1, 1, Conv, [256, 3, 2]], # 3-P3/8
   [-1, 2, C3k2, [512, True, 0.25]],
   [-1, 1, Conv, [512, 3, 2]], # 5-P4/16
   [-1, 2, C3k2, [512, True]],
   [-1, 1, Conv, [512, 3, 2]], # 7-P5/32
   [-1, 2, C3k2, [512, True]],
   [-1, 1, SPPF, [512, 5]], # 9
   [-1, 2, C2PSA, [512]],] # 10

# YOLO11n head
head:
   [[-1, 1, nn.Upsample, [None, 2, "nearest"]],
   [[-1, 6], 1, Concat, [1]], # cat backbone P4
   [-1, 2, C3k2, [512, True]], # 13

   [-1, 1, nn.Upsample, [None, 2, "nearest"]],
   [[-1, 4], 1, Concat, [1]], # cat backbone P3
   [-1, 2, C3k2, [256, True]], # 16 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 13], 1, Concat, [1]], # cat head P4
   [-1, 2, C3k2, [512, True]], # 19 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]], # cat head P5
   [-1, 2, C3k2, [512, True]], # 22 (P5/32-large)

   [[16, 19, 22], 1, Detect, [nc,anchors]]] # Detect(P3, P4, P5)
